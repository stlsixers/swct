- if @card_set
	- unless smart_listing.empty?
		%table.table.table-bordered.table-hover
			%thead
				%tr 
					%th.col-md-5 Card
					%th.col-md-1 Total Count
					%th.col-md-3 Notes
					%th.col-md-3.text-center Actions
			%tbody
				- smart_listing.collection.each do |c|
					%tr
						%td
							= link_to '<i class="fa fa-eye fa-lg"></i>'.html_safe, card_path(c)
							= best_in_place c, :name, as: :input, :html_attrs => { size: '50%'}
						%td= c.inventories.present? ? c.inventories.map(&:quantity).sum : "Sold Out"
						%td= best_in_place c, :notes, as: :textarea
						%td.text-center
							= link_to '<i class="fa fa-plus-circle fa-lg"></i> Add Inventory'.html_safe, new_inventory_path(:card_id => c.id), class: 'btn btn-success'
							= link_to '<i class="fa fa-trash fa-lg"></i> Delete'.html_safe,  card_set_card_path(id: c.id),  method: :delete, data: { confirm: 'Are you sure?' }, class: 'btn btn-danger'
		= smart_listing.paginate					
	- else
		%p.warning No records!
- elsif @machine
	- unless smart_listing.empty?
		%table.table.table-bordered.table-hover
			%thead
				%th.col-md-2 Set
				%th.col-md-3 Card
				%th.col-md-1 Quantity
				%th.col-md-2 Notes
				%th.col-md-4.text-center Actions

			%tbody
				- smart_listing.collection.each do |c|
					- @inventories.each do |i|
						- if c.id == i.card_id
							%tr
								- q = i.quantity+1
								- nq = i.quantity-1
								%td
									= link_to '<i class="fa fa-eye fa-lg"></i>'.html_safe, card_set_cards_path(c.card_set)
									= best_in_place c.card_set, :name, as: :input, :html_attrs => { size: '50%'}
								%td
									=link_to '<i class="fa fa-eye fa-lg"></i>'.html_safe, card_path(c)
									= best_in_place c, :name, as: :input, :html_attrs => { size: '50%'}
								%td= best_in_place i, :quantity, as: :input, :html_attrs => { size: '3'}
								%td= best_in_place c, :notes, as: :textarea
								%td.text-center
									= link_to '<i class="fa fa-plus-circle fa-lg"></i> Add 1'.html_safe, inventory_path(i, :machine_id => i.machine_id, :card_id => c.id, :quantity => q, :status => 'add'), :method => :put, class: 'btn btn-primary'
									= link_to '<i class="fa fa-minus-circle fa-lg"></i> Subtract 1'.html_safe, inventory_path(i, :machine_id => i.machine_id, :card_id => c.id, :quantity => nq, :status => 'subtract'), :method => :put, class: 'btn btn-warning'
									= link_to '<i class="fa fa-trash fa-lg"></i> Delete'.html_safe,  inventory_path(i),  method: :delete, data: { confirm: 'Are you sure?' }, class: 'btn btn-danger'
		= smart_listing.paginate
	- else
		%p.warning No records!
-else
	- unless smart_listing.empty?
		%table.table.table-bordered.table-hover
			%thead
				%th.col-md-2 Set
				%th.col-md-4 Card
				%th.col-md-1 Total Count
				%th.col-md-2 Notes
				%th.col-md-3.text-center Actions

			%tbody
				- smart_listing.collection.each do |c|
					%tr
						%td
							= link_to '<i class="fa fa-eye fa-lg"></i>'.html_safe, card_set_cards_path(c.card_set)
							= c.card_set.name
						%td
							=link_to '<i class="fa fa-eye fa-lg"></i>'.html_safe, card_path(c)
							= best_in_place c, :name, as: :input, :html_attrs => { size: '50%'}
						%td
							= c.inventories.present? ? c.inventories.map(&:quantity).sum : "Sold Out"
						%td
							= best_in_place c, :notes, as: :textarea
						%td.text-center
							= link_to '<i class="fa fa-plus-circle fa-lg"></i> Add Inventory'.html_safe, new_inventory_path(:card_id => c.id), class: 'btn btn-success'
							= link_to '<i class="fa fa-trash fa-lg"></i> Delete'.html_safe,  card_path(id: c.id),  method: :delete, data: { confirm: 'Are you sure?' }, class: 'btn btn-danger'
		= smart_listing.paginate
	- else
		%p.warning No records!

:javascript
	$(document).ready(function() {
	  /* Activating Best In Place */
	  jQuery(".best_in_place").best_in_place();
	});