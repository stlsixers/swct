- if @card_set
	- unless smart_listing.empty?
		%table.table.table-bordered.table-hover
			%thead
				%tr 
					%th Card Name (click to view machines that have this card)
					%th Total Count
					%th Notes
					%th Add Inventory
					%th Edit Card Name/Notes
					%th Delete Card
			%tbody
				- smart_listing.collection.each do |c|
					%tr
						%td= link_to c.name, card_path(c)
						%td= Inventory.where(:card_id => c.id).present? ? Inventory.where(:card_id => c.id).sum(:quantity) : "none reported"
						%td= c.notes
						%td= link_to 'Add Inventory', new_inventory_path(:card_id => c.id), class: 'btn btn-success'
						%td= link_to 'Edit Card Name/Notes', edit_card_set_card_path(id: c.id), class: 'btn btn-success'
						%td= link_to 'Delete Card',  card_set_card_path(id: c.id),  method: :delete, data: { confirm: 'Are you sure?' }, class: 'btn btn-danger'

	- else
		%p.warning No records!
- elsif @machine
	- unless smart_listing.empty?
		%table.table.table-bordered.table-hover
			%thead
				%th Card Set (click to view all cards in set)
				%th Card Name (click to view machines that have this card)
				%th Quantity
				%th Card Notes
				%th Edit Inventory
				%th Add +1
				%th Remove -1
				%th Delete Inventory

			%tbody
				- smart_listing.collection.each do |c|
					- @inventories.each do |i|
						- if c.id == i.card_id
							%tr
								- q = i.quantity+1
								- nq = i.quantity-1
								%td= link_to c.card_set.name, card_set_cards_path(c.card_set)
								%td= link_to c.name, card_path(c)
								%td= i.quantity
								%td= c.notes
								%td= link_to 'Edit Inventory', edit_inventory_path(i), class: 'btn btn-success'
								%td= link_to '<i class="fa fa-plus-circle fa-2x"></i>'.html_safe, inventory_path(i, :machine_id => i.machine_id, :card_id => c.id, :quantity => q, :status => 'add'), :method => :put
								%td= link_to '<i class="fa fa-minus-circle fa-2x"></i>'.html_safe, inventory_path(i, :machine_id => i.machine_id, :card_id => c.id, :quantity => nq, :status => 'subtract'), :method => :put
								%td= link_to 'Delete Inventory',  inventory_path(i),  method: :delete, data: { confirm: 'Are you sure?' }, class: 'btn btn-danger'
	- else
		%p.warning No records!
-else
	- unless smart_listing.empty?
		%table.table.table-bordered.table-hover
			%thead
				%th Card Set (click to view all cards in set)
				%th Card Name (click to view machines that have this card)
				%th Total Count
				%th Notes
				%th Add Inventory
				%th Edit Card
				%th Delete Card

			%tbody
				- smart_listing.collection.each do |c|
					%tr
						%td= link_to c.card_set.name, card_set_cards_path(c.card_set)
						%td= link_to c.name, card_path(c)
						%td= c.inventories.present? ? c.inventories.map(&:quantity).sum : "none reported"
						%td= c.notes
						%td= link_to 'Add Inventory', new_inventory_path(:card_id => c.id), class: 'btn btn-success'
						%td= link_to 'Edit Card', edit_card_path(id: c.id), class: 'btn btn-success'
						%td= link_to 'Delete Card',  card_path(id: c.id),  method: :delete, data: { confirm: 'Are you sure?' }, class: 'btn btn-danger'
	- else
		%p.warning No records!